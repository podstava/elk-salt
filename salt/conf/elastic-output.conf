input {
  beats {
    port => "5044"
    # ssl => true
    # ssl_certificate => /etc/pki/tls/cert/logstash.crt
    # ssl_key => /etc/pki/tls/private/logstash.key
  }
}
filter {
  if [type] == 'log' {
    grok {
      match => { message => [
                  "\[pid: %{NUMBER:pid}\| usid: %{USERNAME:user_session}\| reqid: %{NUMBER:request_id}\] %{IP:ip} %{SYSLOG5424SD:datetime} %{NUMBER:bytes} bytes %{WORD:method} %{URIPATH:uri} %{USERNAME:namespace}\.%{USERNAME:operation_name}\.%{USERNAME:operation_type} \=\> generated %{NUMBER:resp_bytes} bytes in %{NUMBER:msecs} msecs \(HTTP\/1\.1 %{NUMBER:resp_statsus}\) {\"params\": {\"error\": {%{GREEDYDATA:error}}}}",
                  "\[pid: %{NUMBER:pid}\| usid: %{USERNAME:user_session}\| reqid: %{NUMBER:request_id}\] %{IP:ip} %{SYSLOG5424SD:datetime} %{NUMBER:bytes} bytes %{WORD:method} %{URIPATHPARAM:uri} %{USERNAME:namespace}\.%{USERNAME:operation_name}\.%{USERNAME:operation_type} \=\> generated %{NUMBER:resp_bytes} bytes in %{NUMBER:msecs:int} msecs \(HTTP\/1\.1 %{NUMBER:resp_statsus}\) {\"params\": %{GREEDYDATA:json}}"
                 ]
               }
    }
   mutate {
      add_field => {"logtimestamp" => "%{datetime}"}
      remove_field => ["datetime"]
  }
   date {
    match => ["logtimestamp", "[EEE MMM d HH:mm:ss YYYY]"]
   }
  }
}
output {
  elasticsearch {
   hosts => ["localhost:9200"]
   sniffing => true
   manage_template => false
   index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
   document_type => "%{[@metadata][type]}"
  }
}

